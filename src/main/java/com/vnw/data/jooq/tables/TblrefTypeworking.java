/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TblrefTypeworkingRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblrefTypeworking extends TableImpl<TblrefTypeworkingRecord> {

    private static final long serialVersionUID = 734064771;

    /**
     * The reference instance of <code>vnw_core.tblref_typeworking</code>
     */
    public static final TblrefTypeworking TBLREF_TYPEWORKING = new TblrefTypeworking();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblrefTypeworkingRecord> getRecordType() {
        return TblrefTypeworkingRecord.class;
    }

    /**
     * The column <code>vnw_core.tblref_typeworking.typeworkingid</code>.
     */
    public final TableField<TblrefTypeworkingRecord, Integer> TYPEWORKINGID = createField("typeworkingid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>vnw_core.tblref_typeworking.languageid</code>.
     */
    public final TableField<TblrefTypeworkingRecord, Integer> LANGUAGEID = createField("languageid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>vnw_core.tblref_typeworking.typeworkingname</code>.
     */
    public final TableField<TblrefTypeworkingRecord, String> TYPEWORKINGNAME = createField("typeworkingname", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>vnw_core.tblref_typeworking.typeworkingorder</code>.
     */
    public final TableField<TblrefTypeworkingRecord, Integer> TYPEWORKINGORDER = createField("typeworkingorder", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>vnw_core.tblref_typeworking</code> table reference
     */
    public TblrefTypeworking() {
        this("tblref_typeworking", null);
    }

    /**
     * Create an aliased <code>vnw_core.tblref_typeworking</code> table reference
     */
    public TblrefTypeworking(String alias) {
        this(alias, TBLREF_TYPEWORKING);
    }

    private TblrefTypeworking(String alias, Table<TblrefTypeworkingRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblrefTypeworking(String alias, Table<TblrefTypeworkingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblrefTypeworkingRecord> getPrimaryKey() {
        return Keys.KEY_TBLREF_TYPEWORKING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblrefTypeworkingRecord>> getKeys() {
        return Arrays.<UniqueKey<TblrefTypeworkingRecord>>asList(Keys.KEY_TBLREF_TYPEWORKING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefTypeworking as(String alias) {
        return new TblrefTypeworking(alias, this);
    }

    /**
     * Rename this table
     */
    public TblrefTypeworking rename(String name) {
        return new TblrefTypeworking(name, null);
    }
}
