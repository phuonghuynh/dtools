/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TblnewletterRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tblnewletter extends TableImpl<TblnewletterRecord> {

    private static final long serialVersionUID = 871977410;

    /**
     * The reference instance of <code>vnw_core.tblnewletter</code>
     */
    public static final Tblnewletter TBLNEWLETTER = new Tblnewletter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblnewletterRecord> getRecordType() {
        return TblnewletterRecord.class;
    }

    /**
     * The column <code>vnw_core.tblnewletter.newletterid</code>.
     */
    public final TableField<TblnewletterRecord, Integer> NEWLETTERID = createField("newletterid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tblnewletter.tempid</code>.
     */
    public final TableField<TblnewletterRecord, Short> TEMPID = createField("tempid", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>vnw_core.tblnewletter.newlettercontent</code>.
     */
    public final TableField<TblnewletterRecord, String> NEWLETTERCONTENT = createField("newlettercontent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>vnw_core.tblnewletter.createddate</code>.
     */
    public final TableField<TblnewletterRecord, Timestamp> CREATEDDATE = createField("createddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>vnw_core.tblnewletter.issent</code>.
     */
    public final TableField<TblnewletterRecord, Byte> ISSENT = createField("issent", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>vnw_core.tblnewletter</code> table reference
     */
    public Tblnewletter() {
        this("tblnewletter", null);
    }

    /**
     * Create an aliased <code>vnw_core.tblnewletter</code> table reference
     */
    public Tblnewletter(String alias) {
        this(alias, TBLNEWLETTER);
    }

    private Tblnewletter(String alias, Table<TblnewletterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tblnewletter(String alias, Table<TblnewletterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblnewletterRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TBLNEWLETTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblnewletterRecord> getPrimaryKey() {
        return Keys.KEY_TBLNEWLETTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblnewletterRecord>> getKeys() {
        return Arrays.<UniqueKey<TblnewletterRecord>>asList(Keys.KEY_TBLNEWLETTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tblnewletter as(String alias) {
        return new Tblnewletter(alias, this);
    }

    /**
     * Rename this table
     */
    public Tblnewletter rename(String name) {
        return new Tblnewletter(name, null);
    }
}
