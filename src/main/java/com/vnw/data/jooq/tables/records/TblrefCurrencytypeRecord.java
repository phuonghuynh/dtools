/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables.records;


import com.vnw.data.jooq.tables.TblrefCurrencytype;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblrefCurrencytypeRecord extends UpdatableRecordImpl<TblrefCurrencytypeRecord> implements Record2<String, String> {

    private static final long serialVersionUID = -379195822;

    /**
     * Setter for <code>vnw_core.tblref_currencytype.currencycode</code>.
     */
    public void setCurrencycode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>vnw_core.tblref_currencytype.currencycode</code>.
     */
    public String getCurrencycode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vnw_core.tblref_currencytype.currencyname</code>.
     */
    public void setCurrencyname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>vnw_core.tblref_currencytype.currencyname</code>.
     */
    public String getCurrencyname() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return TblrefCurrencytype.TBLREF_CURRENCYTYPE.CURRENCYCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TblrefCurrencytype.TBLREF_CURRENCYTYPE.CURRENCYNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCurrencycode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCurrencyname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefCurrencytypeRecord value1(String value) {
        setCurrencycode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefCurrencytypeRecord value2(String value) {
        setCurrencyname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefCurrencytypeRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TblrefCurrencytypeRecord
     */
    public TblrefCurrencytypeRecord() {
        super(TblrefCurrencytype.TBLREF_CURRENCYTYPE);
    }

    /**
     * Create a detached, initialised TblrefCurrencytypeRecord
     */
    public TblrefCurrencytypeRecord(String currencycode, String currencyname) {
        super(TblrefCurrencytype.TBLREF_CURRENCYTYPE);

        set(0, currencycode);
        set(1, currencyname);
    }
}
