/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TblrefExpertiseRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblrefExpertise extends TableImpl<TblrefExpertiseRecord> {

    private static final long serialVersionUID = -1181616041;

    /**
     * The reference instance of <code>vnw_core.tblref_expertise</code>
     */
    public static final TblrefExpertise TBLREF_EXPERTISE = new TblrefExpertise();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblrefExpertiseRecord> getRecordType() {
        return TblrefExpertiseRecord.class;
    }

    /**
     * The column <code>vnw_core.tblref_expertise.id</code>.
     */
    public final TableField<TblrefExpertiseRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tblref_expertise.name</code>.
     */
    public final TableField<TblrefExpertiseRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * Create a <code>vnw_core.tblref_expertise</code> table reference
     */
    public TblrefExpertise() {
        this("tblref_expertise", null);
    }

    /**
     * Create an aliased <code>vnw_core.tblref_expertise</code> table reference
     */
    public TblrefExpertise(String alias) {
        this(alias, TBLREF_EXPERTISE);
    }

    private TblrefExpertise(String alias, Table<TblrefExpertiseRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblrefExpertise(String alias, Table<TblrefExpertiseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblrefExpertiseRecord, Short> getIdentity() {
        return Keys.IDENTITY_TBLREF_EXPERTISE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblrefExpertiseRecord> getPrimaryKey() {
        return Keys.KEY_TBLREF_EXPERTISE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblrefExpertiseRecord>> getKeys() {
        return Arrays.<UniqueKey<TblrefExpertiseRecord>>asList(Keys.KEY_TBLREF_EXPERTISE_PRIMARY, Keys.KEY_TBLREF_EXPERTISE_EXPERTISE_NAME_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefExpertise as(String alias) {
        return new TblrefExpertise(alias, this);
    }

    /**
     * Rename this table
     */
    public TblrefExpertise rename(String name) {
        return new TblrefExpertise(name, null);
    }
}
