/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TblscreenTestRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblscreenTest extends TableImpl<TblscreenTestRecord> {

    private static final long serialVersionUID = -1299134031;

    /**
     * The reference instance of <code>vnw_core.tblscreen_test</code>
     */
    public static final TblscreenTest TBLSCREEN_TEST = new TblscreenTest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblscreenTestRecord> getRecordType() {
        return TblscreenTestRecord.class;
    }

    /**
     * The column <code>vnw_core.tblscreen_test.testId</code>.
     */
    public final TableField<TblscreenTestRecord, UInteger> TESTID = createField("testId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tblscreen_test.oriTestId</code>. original test of this: 0: this is original test; >0: id of original test
     */
    public final TableField<TblscreenTestRecord, UInteger> ORITESTID = createField("oriTestId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "original test of this: 0: this is original test; >0: id of original test");

    /**
     * The column <code>vnw_core.tblscreen_test.userId</code>. user created test
     */
    public final TableField<TblscreenTestRecord, UInteger> USERID = createField("userId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "user created test");

    /**
     * The column <code>vnw_core.tblscreen_test.testType</code>. 0: default, 1: emp defines
     */
    public final TableField<TblscreenTestRecord, Byte> TESTTYPE = createField("testType", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.TINYINT)), this, "0: default, 1: emp defines");

    /**
     * The column <code>vnw_core.tblscreen_test.name</code>.  test name 
     */
    public final TableField<TblscreenTestRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, " test name ");

    /**
     * The column <code>vnw_core.tblscreen_test.noOfQuestion</code>.  total questions for this test
     */
    public final TableField<TblscreenTestRecord, UByte> NOOFQUESTION = createField("noOfQuestion", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, " total questions for this test");

    /**
     * The column <code>vnw_core.tblscreen_test.createdDate</code>.  created date of test
     */
    public final TableField<TblscreenTestRecord, Timestamp> CREATEDDATE = createField("createdDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, " created date of test");

    /**
     * The column <code>vnw_core.tblscreen_test.lastUpdatedDate</code>.  last update date of test
     */
    public final TableField<TblscreenTestRecord, Timestamp> LASTUPDATEDDATE = createField("lastUpdatedDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, " last update date of test");

    /**
     * The column <code>vnw_core.tblscreen_test.isDeleted</code>.  1 : deleted  0: not delete 
     */
    public final TableField<TblscreenTestRecord, Byte> ISDELETED = createField("isDeleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, " 1 : deleted  0: not delete ");

    /**
     * The column <code>vnw_core.tblscreen_test.isCompleted</code>.  1 : Completed  0: not Complete 
     */
    public final TableField<TblscreenTestRecord, Byte> ISCOMPLETED = createField("isCompleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, " 1 : Completed  0: not Complete ");

    /**
     * The column <code>vnw_core.tblscreen_test.isActive</code>. Active to be assigned to job: 1 : Active  0: not Active 
     */
    public final TableField<TblscreenTestRecord, Byte> ISACTIVE = createField("isActive", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.TINYINT)), this, "Active to be assigned to job: 1 : Active  0: not Active ");

    /**
     * Create a <code>vnw_core.tblscreen_test</code> table reference
     */
    public TblscreenTest() {
        this("tblscreen_test", null);
    }

    /**
     * Create an aliased <code>vnw_core.tblscreen_test</code> table reference
     */
    public TblscreenTest(String alias) {
        this(alias, TBLSCREEN_TEST);
    }

    private TblscreenTest(String alias, Table<TblscreenTestRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblscreenTest(String alias, Table<TblscreenTestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblscreenTestRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_TBLSCREEN_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblscreenTestRecord> getPrimaryKey() {
        return Keys.KEY_TBLSCREEN_TEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblscreenTestRecord>> getKeys() {
        return Arrays.<UniqueKey<TblscreenTestRecord>>asList(Keys.KEY_TBLSCREEN_TEST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblscreenTest as(String alias) {
        return new TblscreenTest(alias, this);
    }

    /**
     * Rename this table
     */
    public TblscreenTest rename(String name) {
        return new TblscreenTest(name, null);
    }
}
