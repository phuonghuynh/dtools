/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TblrefEventRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblrefEvent extends TableImpl<TblrefEventRecord> {

    private static final long serialVersionUID = -1669318865;

    /**
     * The reference instance of <code>vnw_core.tblref_event</code>
     */
    public static final TblrefEvent TBLREF_EVENT = new TblrefEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblrefEventRecord> getRecordType() {
        return TblrefEventRecord.class;
    }

    /**
     * The column <code>vnw_core.tblref_event.id</code>.
     */
    public final TableField<TblrefEventRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tblref_event.name</code>.
     */
    public final TableField<TblrefEventRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>vnw_core.tblref_event</code> table reference
     */
    public TblrefEvent() {
        this("tblref_event", null);
    }

    /**
     * Create an aliased <code>vnw_core.tblref_event</code> table reference
     */
    public TblrefEvent(String alias) {
        this(alias, TBLREF_EVENT);
    }

    private TblrefEvent(String alias, Table<TblrefEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblrefEvent(String alias, Table<TblrefEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblrefEventRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TBLREF_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblrefEventRecord> getPrimaryKey() {
        return Keys.KEY_TBLREF_EVENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblrefEventRecord>> getKeys() {
        return Arrays.<UniqueKey<TblrefEventRecord>>asList(Keys.KEY_TBLREF_EVENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefEvent as(String alias) {
        return new TblrefEvent(alias, this);
    }

    /**
     * Rename this table
     */
    public TblrefEvent rename(String name) {
        return new TblrefEvent(name, null);
    }
}
