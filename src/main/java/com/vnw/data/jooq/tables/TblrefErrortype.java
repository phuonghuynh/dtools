/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TblrefErrortypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblrefErrortype extends TableImpl<TblrefErrortypeRecord> {

    private static final long serialVersionUID = -654626183;

    /**
     * The reference instance of <code>vnw_core.tblref_errortype</code>
     */
    public static final TblrefErrortype TBLREF_ERRORTYPE = new TblrefErrortype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblrefErrortypeRecord> getRecordType() {
        return TblrefErrortypeRecord.class;
    }

    /**
     * The column <code>vnw_core.tblref_errortype.errorTypeId</code>. error type id
     */
    public final TableField<TblrefErrortypeRecord, Byte> ERRORTYPEID = createField("errorTypeId", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "error type id");

    /**
     * The column <code>vnw_core.tblref_errortype.description</code>. description of error
     */
    public final TableField<TblrefErrortypeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "description of error");

    /**
     * Create a <code>vnw_core.tblref_errortype</code> table reference
     */
    public TblrefErrortype() {
        this("tblref_errortype", null);
    }

    /**
     * Create an aliased <code>vnw_core.tblref_errortype</code> table reference
     */
    public TblrefErrortype(String alias) {
        this(alias, TBLREF_ERRORTYPE);
    }

    private TblrefErrortype(String alias, Table<TblrefErrortypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblrefErrortype(String alias, Table<TblrefErrortypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblrefErrortypeRecord, Byte> getIdentity() {
        return Keys.IDENTITY_TBLREF_ERRORTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblrefErrortypeRecord> getPrimaryKey() {
        return Keys.KEY_TBLREF_ERRORTYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblrefErrortypeRecord>> getKeys() {
        return Arrays.<UniqueKey<TblrefErrortypeRecord>>asList(Keys.KEY_TBLREF_ERRORTYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefErrortype as(String alias) {
        return new TblrefErrortype(alias, this);
    }

    /**
     * Rename this table
     */
    public TblrefErrortype rename(String name) {
        return new TblrefErrortype(name, null);
    }
}
