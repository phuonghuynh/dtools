/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.TbloauthAuthorizationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbloauthAuthorization extends TableImpl<TbloauthAuthorizationRecord> {

    private static final long serialVersionUID = 1651680065;

    /**
     * The reference instance of <code>vnw_core.tbloauth_authorization</code>
     */
    public static final TbloauthAuthorization TBLOAUTH_AUTHORIZATION = new TbloauthAuthorization();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbloauthAuthorizationRecord> getRecordType() {
        return TbloauthAuthorizationRecord.class;
    }

    /**
     * The column <code>vnw_core.tbloauth_authorization.id</code>.
     */
    public final TableField<TbloauthAuthorizationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tbloauth_authorization.user_id</code>.
     */
    public final TableField<TbloauthAuthorizationRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tbloauth_authorization.client_id</code>.
     */
    public final TableField<TbloauthAuthorizationRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>vnw_core.tbloauth_authorization.scope</code>. (DC2Type:array)
     */
    public final TableField<TbloauthAuthorizationRecord, String> SCOPE = createField("scope", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "(DC2Type:array)");

    /**
     * Create a <code>vnw_core.tbloauth_authorization</code> table reference
     */
    public TbloauthAuthorization() {
        this("tbloauth_authorization", null);
    }

    /**
     * Create an aliased <code>vnw_core.tbloauth_authorization</code> table reference
     */
    public TbloauthAuthorization(String alias) {
        this(alias, TBLOAUTH_AUTHORIZATION);
    }

    private TbloauthAuthorization(String alias, Table<TbloauthAuthorizationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbloauthAuthorization(String alias, Table<TbloauthAuthorizationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TbloauthAuthorizationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TBLOAUTH_AUTHORIZATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbloauthAuthorizationRecord> getPrimaryKey() {
        return Keys.KEY_TBLOAUTH_AUTHORIZATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbloauthAuthorizationRecord>> getKeys() {
        return Arrays.<UniqueKey<TbloauthAuthorizationRecord>>asList(Keys.KEY_TBLOAUTH_AUTHORIZATION_PRIMARY, Keys.KEY_TBLOAUTH_AUTHORIZATION_UNIQUE_USER_CLIENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbloauthAuthorization as(String alias) {
        return new TbloauthAuthorization(alias, this);
    }

    /**
     * Rename this table
     */
    public TbloauthAuthorization rename(String name) {
        return new TbloauthAuthorization(name, null);
    }
}
