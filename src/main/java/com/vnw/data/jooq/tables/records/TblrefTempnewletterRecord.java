/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables.records;


import com.vnw.data.jooq.tables.TblrefTempnewletter;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblrefTempnewletterRecord extends UpdatableRecordImpl<TblrefTempnewletterRecord> implements Record3<Short, String, Byte> {

    private static final long serialVersionUID = 184285086;

    /**
     * Setter for <code>vnw_core.tblref_tempnewletter.tempid</code>.
     */
    public void setTempid(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>vnw_core.tblref_tempnewletter.tempid</code>.
     */
    public Short getTempid() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>vnw_core.tblref_tempnewletter.temppath</code>.
     */
    public void setTemppath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>vnw_core.tblref_tempnewletter.temppath</code>.
     */
    public String getTemppath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vnw_core.tblref_tempnewletter.isactive</code>.
     */
    public void setIsactive(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>vnw_core.tblref_tempnewletter.isactive</code>.
     */
    public Byte getIsactive() {
        return (Byte) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Short, String, Byte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Short, String, Byte> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return TblrefTempnewletter.TBLREF_TEMPNEWLETTER.TEMPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TblrefTempnewletter.TBLREF_TEMPNEWLETTER.TEMPPATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return TblrefTempnewletter.TBLREF_TEMPNEWLETTER.ISACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getTempid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTemppath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getIsactive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefTempnewletterRecord value1(Short value) {
        setTempid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefTempnewletterRecord value2(String value) {
        setTemppath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefTempnewletterRecord value3(Byte value) {
        setIsactive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblrefTempnewletterRecord values(Short value1, String value2, Byte value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TblrefTempnewletterRecord
     */
    public TblrefTempnewletterRecord() {
        super(TblrefTempnewletter.TBLREF_TEMPNEWLETTER);
    }

    /**
     * Create a detached, initialised TblrefTempnewletterRecord
     */
    public TblrefTempnewletterRecord(Short tempid, String temppath, Byte isactive) {
        super(TblrefTempnewletter.TBLREF_TEMPNEWLETTER);

        set(0, tempid);
        set(1, temppath);
        set(2, isactive);
    }
}
