/**
 * This class is generated by jOOQ
 */
package com.vnw.data.jooq.tables;


import com.vnw.data.jooq.Keys;
import com.vnw.data.jooq.VnwCore;
import com.vnw.data.jooq.tables.records.DoubleMatchingAttributeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DoubleMatchingAttribute extends TableImpl<DoubleMatchingAttributeRecord> {

    private static final long serialVersionUID = 2007846880;

    /**
     * The reference instance of <code>vnw_core.double_matching_attribute</code>
     */
    public static final DoubleMatchingAttribute DOUBLE_MATCHING_ATTRIBUTE = new DoubleMatchingAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DoubleMatchingAttributeRecord> getRecordType() {
        return DoubleMatchingAttributeRecord.class;
    }

    /**
     * The column <code>vnw_core.double_matching_attribute.attid</code>.
     */
    public final TableField<DoubleMatchingAttributeRecord, Byte> ATTID = createField("attid", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>vnw_core.double_matching_attribute.att_code</code>.
     */
    public final TableField<DoubleMatchingAttributeRecord, String> ATT_CODE = createField("att_code", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>vnw_core.double_matching_attribute.att_name</code>.
     */
    public final TableField<DoubleMatchingAttributeRecord, String> ATT_NAME = createField("att_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>vnw_core.double_matching_attribute.att_weight_employer</code>.
     */
    public final TableField<DoubleMatchingAttributeRecord, Double> ATT_WEIGHT_EMPLOYER = createField("att_weight_employer", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>vnw_core.double_matching_attribute.att_weight_jobseeker</code>.
     */
    public final TableField<DoubleMatchingAttributeRecord, Double> ATT_WEIGHT_JOBSEEKER = createField("att_weight_jobseeker", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * Create a <code>vnw_core.double_matching_attribute</code> table reference
     */
    public DoubleMatchingAttribute() {
        this("double_matching_attribute", null);
    }

    /**
     * Create an aliased <code>vnw_core.double_matching_attribute</code> table reference
     */
    public DoubleMatchingAttribute(String alias) {
        this(alias, DOUBLE_MATCHING_ATTRIBUTE);
    }

    private DoubleMatchingAttribute(String alias, Table<DoubleMatchingAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private DoubleMatchingAttribute(String alias, Table<DoubleMatchingAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VnwCore.VNW_CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DoubleMatchingAttributeRecord, Byte> getIdentity() {
        return Keys.IDENTITY_DOUBLE_MATCHING_ATTRIBUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DoubleMatchingAttributeRecord> getPrimaryKey() {
        return Keys.KEY_DOUBLE_MATCHING_ATTRIBUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DoubleMatchingAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<DoubleMatchingAttributeRecord>>asList(Keys.KEY_DOUBLE_MATCHING_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoubleMatchingAttribute as(String alias) {
        return new DoubleMatchingAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    public DoubleMatchingAttribute rename(String name) {
        return new DoubleMatchingAttribute(name, null);
    }
}
